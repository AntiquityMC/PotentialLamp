plugins {
	id 'potential-lamp'
	id 'maven-publish'
}

group = 'io.github.antiquitymc.potential-lamp'

def minecraft_version = "c0.30_01c"
def env = System.getenv()
def runNumber = env.GITHUB_RUN_NUMBER ? env.GITHUB_RUN_NUMBER.toInteger() + 15 : 'local'
version = "$minecraft_version-$runNumber"

potentialLamp {
	minecraftVersion = minecraft_version
	enigmaVersion = project.enigma_version
}

import juuxel.chocostitch.CommandFixNesting

mapIntermediaryJar {
	doLast {
		CommandFixNesting.run(outputJar.get().asFile)
	}
}

tasks.register('prepareRelease', juuxel.potentiallamp.gradle.task.SetGithubOutputs) {
	dependsOn 'assemble'
	outputProperties = provider {
		String title = "Build $runNumber for $minecraft_version ($version)"
		[ version: project.version.toString(), title: title ]
	}
}

publishing {
	publications.register('mappings', MavenPublication) {
		artifactId = 'mappings'
		artifact(tasks.named('obfToNamedTinyJar')) {
			classifier = 'obfToNamed'
		}
		artifact(tasks.named('obfToNamedITinyJar')) {
			classifier = 'obfToNamedI'
		}
	}

	publications.register('constants', MavenPublication) {
		artifactId = 'constants'
		artifact tasks.named('constantsJar')
	}
}
